openapi: 3.0.1
info:
  description: Employee Management API
  version: 1.0.0-oas3
  title: EPM-API
  
paths:
  /employee/commissioned:
    post:
      requestBody:
        description: "[REQ] Add commissionned employee"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeObject'
      responses:
        '200':
          description: "[200] AddEmployee Success"
        '400':
          description: "[400] Invalid data"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidData'
                
  /employee/hourly:
    post:
      requestBody:
        description: "[REQ] Add hourly employee"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeObject'
      responses:
        '200':
          description: "[200] AddEmployee Success"
        '400':
          description: "[400] Invalid data"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidData'
                
  /employee/salaried:
    post:
      requestBody:
        description: "[REQ] Add salaried employee"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeObject'
      responses:
        '200':
          description: "[200] AddEmployee Success"
        '400':
          description: "[400] Invalid data"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidData'
                
  /employee:
    delete:
      summary: "Remove an Employee by ID"
      requestBody:
        description: "[DEL] ID to delete"
        content:
          application/json:
            schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 123
      responses:
        '200':
          description: "[200] RemoveEmployee Success"
        '400':
          description: "[400] RemoveEmployee Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteError'
                
  /timecard:
    post:
      summary: "Add a timecard by ID"
      requestBody:
        description: "[REQ] Timecard Post"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimecardBody'
      responses:
        '200':
          description: "[200] TimecardPost Success"
        '400':
          description: "[400] TimecardPost Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimecardError'
                
  /salesreceipt/{id}:
    post:
      summary: "Add a salesreceipt by ID"
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            example: 123
      requestBody:
        description: "[REQ] SalesReceipt Post"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesreceiptBody'
      responses:
        '200':
          description: "[200] SalesReceiptPost Success"
  
  /employees/type/commissioned:
    put:
      requestBody:
        description: "[REQ] Update type to commissionned"
        content:
          application/json:
            schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 123
                  salary:
                    type: integer
                    example: 1200
                  commissionRate:
                    type: integer
                    example: 10
      responses:
        '200':
          description: "[200] Updated correctly"
        '400':
          description: "[400] Invalid data"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidData'
                
  /employees/type/hourly:
    put:
      requestBody:
        description: "[REQ] Update type to hourly"
        content:
          application/json:
            schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 123
                  rate:
                    type: integer
                    example: 10
      responses:
        '200':
          description: "[200] Updated correctly"
        '400':
          description: "[400] Invalid data"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidData'
                
  /employees/type/salaried:
    put:
      requestBody:
        description: "[REQ] Update type to salaried"
        content:
          application/json:
            schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 123
                  salary:
                    type: integer
                    example: 1200
      responses:
        '200':
          description: "[200] Updated correctly"
        '400':
          description: "[400] Invalid data"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidData'
                
  /employees/method/direct:
    put:
      requestBody:
        description: "[REQ] Update method to direct"
        content:
          application/json:
            schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 123
                  bank:
                    type: string
                    example: "Belfius"
                  iban:
                    type: string
                    example: "BE12 1234 1234 1234"
      responses:
        '200':
          description: "[200] Updated correctly"
        '400':
          description: "[400] Invalid data"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidData'
                
  /employees/method/mail:
    put:
      requestBody:
        description: "[REQ] Update method to mail"
        content:  
          application/json:
            schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 123
                  email:
                    type: string
                    example: "jc@heh.be"
      responses:
        '200':
          description: "[200] Updated correctly"
        '400':
          description: "[400] Invalid data"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidData'
                
  /employees/field/address:
    put:
      requestBody:
        description: "[REQ] Update address field"
        content:  
          application/json:
            schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 123
                  newAddress:
                    type: string
                    example: "23, rue de Bruxelles"
      responses:
        '200':
          description: "[200] Updated correctly"
        '400':
          description: "[400] Invalid data"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidData'
      
  /employees/field/name:
    put:
      requestBody:
        description: "[REQ] Update name field"
        content:  
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  example: 123
                newName:
                  type: string
                  example: "Xavier"
      responses:
        '200':
          description: "[200] Updated correctly"
        '400':
          description: "[400] Invalid data"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidData'

components:
  schemas:
    EmployeeObject:
      type: object
      required:
        - id
        - name
        - address
      properties:
        id:
          type: integer
          example: 123
        name:
          type: string
          example: "Jean-Claude"
        address:
          type: string
          example: "12, rue de Wasmes"
        bank:
          type: string
          example: "Belfius"
        iban:
          type: string
          example: "BE24 1234 1234 1234"
        email:
          type: string
          example: "jc@employee.be"
        salary:
          type: integer
          example: 1500
        rate:
          type: integer
          example: 10
          
    InvalidData:
      type: object
      properties:
        timestamp:
          type: string
          example: "2020-11-26T07:44:23.354+00:00"
        error:
          type: string
          example: "e-mail invalide"
          
    DeleteError:
      type: object
      properties:
        timestamp:
          type: string
          example: "2020-11-26T07:44:23.354+00:00"
        error:
          type: string
          example: "Employ√© inexistant"
          
    TimecardBody:
      type: object
      properties:
        id:
          type: integer
          example: 123
        date:
          type: string
          example: "2020-11-26"
        hours:
          type: integer
          example: 6
          
    TimecardError:
      type: object
      properties:
        timestamp:
          type: string
          example: "2020-11-26T07:44:23.354+00:00"
        error:
          type: string
          example: "Cette timecard est incorrecte"
            
    SalesreceiptBody:
      type: object
      properties:
        hours:
          type: string
          example: "6h"
        amount:
          type: integer
          example: 1300
          
    UpdateError:
      type: object
      properties:
        timestamp:
          type: string
          example: "2020-11-26T07:44:23.354+00:00"
        errors:
          type: string
          example: "L'ID n'est pas correct"
            
servers:
  - url: 'https://immense-springs-01206.herokuapp.com'