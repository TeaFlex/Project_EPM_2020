openapi: 3.0.1
info:
  description: Employee Management API
  version: 1.0.0-oas3
  title: EPM-API
  
paths:
  /employees/add:
    post:
      requestBody:
        description: "[REQ] Add employee"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeSalaried'
      responses:
        '201':
          description: "[201] AddEmployee Success"
        '400':
          description: "[400] Invalid data"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidData'
                
  /employees/remove_{id}:
    delete:
      summary: "Remove an Employee by ID"
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            example: 123
      responses:
        '200':
          description: "[200] RemoveEmployee Success"
        '400':
          description: "[400] RemoveEmployee Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingEmployee'
               
  /employees/update_{id}:
    post:
      summary: "Update an Employee by ID"
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            description: The ID of the Employee to update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmployee'
      responses:
        '200':
          description: "[200] EditEmployee Success"
        '400':
          description: "[400] UpdateEmployee Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateError'
                
  /timecard/add:
    post:
      requestBody:
        description: "[REQ] Timecard Post"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostTimecard'
      responses:
        '200':
          description: "[200] TimecardPost Success"
        '400':
          description: "[400] TimecardPost Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimecardError'
                
  /salesreceipt/add:
    post:
      requestBody:
        description: "[REQ] SalesReceipt Post"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSalesReceipt'
      responses:
        '200':
          description: "[200] SalesReceiptPost Success"

components:
  schemas:
    EmployeeSalaried:
      type: object
      properties:
        empId:
          type: integer
          example: 123
        name:
          type: string
          example: "Jean-Claude"
        address:
          type: string
          example: "Rue de Mons"
        mail:
          type: string
          example: "jc@heh.be"
        monthlySalary:
          type: number
          example: 1500
          
    InvalidData:
      type: object
      properties:
        timestamp:
          type: string
          example: "2020-10-29T07:44:23.354+00:00"
        errors:
          type: array
          items: 
            type: string
            example: "e-mail invalide"
          
    MissingEmployee:
      type: object
      properties:
        empId:
          type: integer
          example: 123
        error:
          type: string
          example: "Employ√© inexistant"
          
    PostTimecard:
      type: object
      properties:
        empId:
          type: integer
          example: 123
        date:
          type: string
          example: "2020-10-29"
        hours:
          type: string
          example: "6h"
          
    TimecardError:
      type: object
      properties:
        empId:
          type: integer
          example: 123
        errors:
          type: array
          items:
            type: string
            example: "Cette timecard est incorrecte"
            
    PostSalesReceipt:
      type: object
      properties:
        empId:
          type: integer
          example: 123
        date:
          type: string
          example: "2020-10-29"
        hours:
          type: string
          example: "6h"
        amount:
          type: integer
          example: 1300
          
    UpdateEmployee:
      type: object
      properties:
        empId: 
          type: integer
          example: 123
        property:
          type: string
          example: "name"
        value:
          type: string
          example: "Jonathan"
          
    UpdateError:
      type: object
      properties:
        empId:
          type: integer
          example: 123
        errors:
          type: array
          items:
            type: string
            example: "L'ID n'est pas correct"